{
  "name": "Just Do It",
  "tagline": "Move Zeros & Sort Colors",
  "body": "##Move Zeros\r\nGiven an array, move all zeros to the end of array, and keep other non-zero elements in relative order.\r\n[0, 1, 0, 3, 12] -> [1, 3, 12, 0, 0]\r\n\r\n###Solution:\r\nTwo pointers + one pass\r\nshift non-zero values as far forward as possible. and fill remaining spaces with zeros.\r\n\r\nUse two pointers, one points to the next position to be replaced, another points to the current iterating element. when current element is not zero, set the value to another replaced element. If it's zero, do nothing. After one pointer reaches the end, set all the element starting from replaced index to zero.\r\n\r\nTime Complexity: \r\nO(n)\r\n\r\nhttps://leetcode.com/problems/move-zeroes/\r\n\r\n\r\n##Sort Colors\r\nGiven an array with n objects colored red, white or blue, sort them so that objects of the same color are adjacent, with the colors in the order red, white and blue.\r\n\r\n###Solution:\r\nThe idea is to swap all the 0's to the left, all the 2's to the right, and all 1's in the middle.\r\nuse two pointers to record next 0 position, and next 2 position. \r\n\r\nTime Complexity: \r\nO(n)\r\n\r\nhttps://leetcode.com/problems/sort-colors/",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}